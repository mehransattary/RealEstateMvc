
@model PagedList.IPagedList<MoshaverDataLayer.Model.Comment>
@using PagedList.Mvc
@using MoshaverDataLayer.Context;
@{
    UnitOfWork db = new UnitOfWork();
    int counter = 0;
}


<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table" id="some_grid_container">
    <tr>
        <th>
      عنوان ملک
        </th>
        <th>
          کامنت پدر
        </th>
        <th>
        نام
        </th>
        <th>
         ایمیل
        </th>
        <th>
    کامنت
        </th>
        <th>
       تاریخ
        </th>
        <th>
           نمایش
        </th>
        <th>
           پاسخ
        </th>
        <th>
          
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.melk.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Parent.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TextComment)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsShow)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OkAnswer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Order)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
<div class="row">
    <style>
        .pagep1 {
            display: inline-block;
            margin-top: 1px;
            margin-right: 0;
            margin-bottom: 30px;
        }

            .pagep1 a {
                /*color: black;*/
                float: left;
                padding: 10px 10px;
                text-decoration: none;
                transition: background-color .3s;
                border: 1px solid #dee2e6;
                box-shadow: 0 0 2rem 0 #f55a4eb5 inset;
            }

                .pagep1 a.active {
                    background-color: darkgray;
                    color: blue;
                    border: 1px solid #4CAF50;
                }

                .pagep1 a:hover:not(.active) {
                    background-color: darkslategrey;
                }
    </style>
    <div class="pagedList pagep1 container " id="contentPager">
        @Html.PagedListPager(Model, page => Url.Action("Index", "Comments", new { page }),
                                    /*     PagedListRenderOptions.PageNumbersOnly*/
                                    //PagedListRenderOptions.Classic
                                    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
                                    {
                                        LinkToFirstPageFormat = "اولین",
                                        LinkToPreviousPageFormat = "قبلی",
                                        LinkToNextPageFormat = "بعدی",
                                        LinkToLastPageFormat = "آخرین",
                                        //DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                                        //DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                        //DisplayLinkToLastPage = PagedListDisplayMode.Always,
                                        //DisplayLinkToNextPage = PagedListDisplayMode.Always,
                                        MaximumPageNumbersToDisplay = 7,
                                        DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                                    }, new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "some_grid_container" }))



        @*<div class="pagedList">
                 @Html.PagedListPager(Model, page => Url.Action("PagingSortingAndSearching", new
            {
                page,
                sortOn = ViewBag.SortOn,
                orderBy = ViewBag.OrderBy,
                pSortOn =
                 ViewBag.SortOn,
                keyword = ViewBag.Keyword
            }),
             PagedListRenderOptions.ClassicPlusFirstAndLast)
             </div>*@
        @*@Html.PagedListPager((IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("PagedListPager_Index", new { page, accountmenu = ViewBag.AccountMenu, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
            PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
            {
                LinkToFirstPageFormat = "<<",
                LinkToPreviousPageFormat = "<",
                LinkToNextPageFormat = ">",
                LinkToLastPageFormat = ">>",
                //DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                //DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                //DisplayLinkToLastPage = PagedListDisplayMode.Always,
                //DisplayLinkToNextPage = PagedListDisplayMode.Always,
                MaximumPageNumbersToDisplay = 0,
                DisplayEllipsesWhenNotShowingAllPageNumbers = false,
            }, new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "some_grid_container" }))*@

    </div>
</div>