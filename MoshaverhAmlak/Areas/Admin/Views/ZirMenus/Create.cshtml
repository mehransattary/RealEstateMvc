@model MoshaverDataLayer.Model.ZirMenu

@{
    ViewBag.Title = "Create";
    //Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}




@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MenuId, "MenuId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MenuId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MenuId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.zirMenuNameId, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("zirMenuNameId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.zirMenuNameId, "", new { @class = "text-danger" })
            </div>
        </div>

     

        <div class="form-group">
            @Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" ,@Value=1,min=1} })
                @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.Isitems, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    <input style="opacity:unset;" class="check-box" data-val="true" data-val-required="The وجودآیتم field is required." id="Isitems" name="Isitems" type="checkbox" value="true"><input name="Isitems" type="hidden" value="false">
                    <span class="field-validation-valid text-danger" data-valmsg-for="Isitems" data-valmsg-replace="true"></span>
                </div>
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.Isitems, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
       
                    @Html.EditorFor(model => model.Isitems)
                    @Html.ValidationMessageFor(model => model.Isitems, "", new { @class = "text-danger" })
      
            </div>
        </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="ذخیره" class="btn btn-success btn-block" />
                </div>
            </div>
        </div>
}

